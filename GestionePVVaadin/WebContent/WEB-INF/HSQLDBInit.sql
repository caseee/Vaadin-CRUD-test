# File contentente le query di inizializzazione database
CREATE TABLE SITES (ID IDENTITY, NAME VARCHAR(255) NOT NULL, INFORMATION VARCHAR(255), VERSIONID INT DEFAULT 0);

CREATE TABLE USERS (ID IDENTITY, USERNAME VARCHAR(255) UNIQUE NOT NULL, PASS VARCHAR(255) NOT NULL, LEVEL INT NOT NULL, SITE INTEGER REFERENCES SITES, VERSIONID INT DEFAULT 0); 

CREATE TABLE COLORS (ID IDENTITY, NAME VARCHAR(255) NOT NULL, VERSIONID INT DEFAULT 0);

CREATE TABLE SEASONS (ID IDENTITY, NAME VARCHAR(255) NOT NULL, VERSIONID INT DEFAULT 0);

CREATE TABLE SIZES(ID IDENTITY, NAME VARCHAR(255) NOT NULL , VERSIONID INT DEFAULT 0);

CREATE TABLE CATEGORIES (ID IDENTITY, FATHER_ID INTEGER REFERENCES CATEGORIES, CATEGORY VARCHAR(256), VERSIONID INT DEFAULT 0 );

CREATE TABLE ARTICLES (ID IDENTITY, CATEGORY INTEGER REFERENCES CATEGORIES, NAME VARCHAR(255) NOT NULL, DESCRIPTION VARCHAR(255), 
	COLOR INTEGER REFERENCES COLORS, SEASON INTEGER REFERENCES SEASONS, SIZE INTEGER REFERENCES SIZES, PRICE INT, VERSIONID INT DEFAULT 0);

CREATE TABLE REGISTRY (ID IDENTITY, NAME VARCHAR(255), STREET VARCHAR(255), CITY VARCHAR(255), EMAIL VARCHAR(255), PHONE VARCHAR(255) , VERSIONID INT DEFAULT 0 );	

CREATE TABLE MOVIMENTATIONS_TYPE (ID IDENTITY, DESCRIPTION VARCHAR(255), QUANTITY_EFFECT INTEGER, VERSIONID INT DEFAULT 0 );	

CREATE TABLE MOVIMENTATIONS (ID IDENTITY, MOVIMENTATION VARCHAR(255), SITE INTEGER REFERENCES SITES NOT NULL, MOVIMENTATION_TYPE INT NOT NULL REFERENCES MOVIMENTATIONS_TYPE , 
	INTERNALDESTINATION INT DEFAULT NULL REFERENCES SITES, DESTINATION INT REFERENCES REGISTRY, VERSIONID INT DEFAULT 0 );

CREATE TABLE MOVIMENTATIONS_SPEC(ID IDENTITY, ID_HEAD INTEGER REFERENCES MOVIMENTATIONS, ID_ART INTEGER REFERENCES ARTICLES, QUANTITY INTEGER, PRICE DECIMAL(10,2), VERSIONID INT DEFAULT 0);

CREATE TRIGGER SITES_VERSION BEFORE UPDATE ON SITES
	REFERENCING NEW ROW AS newrow OLD ROW AS oldrow FOR EACH ROW
	SET newrow.VERSIONID = oldrow.VERSIONID+1;
CREATE TRIGGER USERS_VERSION BEFORE UPDATE ON USERS
	REFERENCING NEW ROW AS newrow OLD ROW AS oldrow FOR EACH ROW
	SET newrow.VERSIONID = oldrow.VERSIONID+1;
CREATE TRIGGER COLORS_VERSION BEFORE UPDATE ON COLORS
	REFERENCING NEW ROW AS newrow OLD ROW AS oldrow FOR EACH ROW
	SET newrow.VERSIONID = oldrow.VERSIONID+1;
CREATE TRIGGER SEASONS_VERSION BEFORE UPDATE ON SEASONS
	REFERENCING NEW ROW AS newrow OLD ROW AS oldrow FOR EACH ROW
	SET newrow.VERSIONID = oldrow.VERSIONID+1;
CREATE TRIGGER SIZES_VERSION BEFORE UPDATE ON SIZES
	REFERENCING NEW ROW AS newrow OLD ROW AS oldrow FOR EACH ROW
	SET newrow.VERSIONID = oldrow.VERSIONID+1;
CREATE TRIGGER CATEGORIES_VERSION BEFORE UPDATE ON CATEGORIES
	REFERENCING NEW ROW AS newrow OLD ROW AS oldrow FOR EACH ROW
	SET newrow.VERSIONID = oldrow.VERSIONID+1;
CREATE TRIGGER ARTICLES_VERSION BEFORE UPDATE ON ARTICLES 
	REFERENCING NEW ROW AS newrow OLD ROW AS oldrow FOR EACH ROW
	SET newrow.VERSIONID = oldrow.VERSIONID+1;
CREATE TRIGGER REGISTRY_VERSION BEFORE UPDATE ON REGISTRY
	REFERENCING NEW ROW AS newrow OLD ROW AS oldrow FOR EACH ROW
	SET newrow.VERSIONID = oldrow.VERSIONID+1;
CREATE TRIGGER MOVIMENTATIONS_TYPE_VERSION BEFORE UPDATE ON MOVIMENTATIONS_TYPE
	REFERENCING NEW ROW AS newrow OLD ROW AS oldrow FOR EACH ROW
	SET newrow.VERSIONID = oldrow.VERSIONID+1;
CREATE TRIGGER MOVIMENTATIONS_VERSION BEFORE UPDATE ON MOVIMENTATIONS
	REFERENCING NEW ROW AS newrow OLD ROW AS oldrow FOR EACH ROW
	SET newrow.VERSIONID = oldrow.VERSIONID+1;
CREATE TRIGGER MOVIMENTATIONS_SPEC_VERSION BEFORE UPDATE ON MOVIMENTATIONS_SPEC
	REFERENCING NEW ROW AS newrow OLD ROW AS oldrow FOR EACH ROW
	SET newrow.VERSIONID = oldrow.VERSIONID+1;

	
INSERT INTO SEASONS VALUES (NULL, 'N/A',0);
INSERT INTO COLORS VALUES (NULL, 'N/A',0);
INSERT INTO SIZES VALUES (NULL, 'N/A',0);
INSERT INTO SITES VALUES (NULL, 'CENTRAL','DEFAULT SITE',0)
INSERT INTO USERS VALUES (NULL,'admin','70b3f062173dafebc53c2ef9bf20e17d9b0e63d2',99,IDENTITY(),0);
INSERT INTO CATEGORIES VALUES (NULL,NULL,'MAIN',0);
INSERT INTO ARTICLES VALUES (NULL, 0, 'ART1','TEST1', 0, 0, 0, 10, 0);

             